enum Tipo {
  POLIZA
  RUC
  CONTRATANTE
}

enum Transaccion {
  VENTA
  AFILIACIONES
  PAGOS
}

# input Date{
#   month: String
#   year: String
# }

# input

# input InputValidations{
#   datosGenerales: 
# }

input InputCargaDashboard {
  tipo: Tipo
  # numero de poliza
  poliza: String
  # contratante
  contratante: String
  # producto: esta bloqueado 
  producto: String
  # canalDeVenta esta bloqueado
  canalDeVenta: String
  # transaccion
  transaccion: Transaccion
  # periodo de declaracion
  #periodoDeclaracion: Date
  # periodo de declaracion
  periodoDeclaracion: String
  # RUC
  ruc: String
  # codigo del usuario que hace el registro
  userCode: String
}

type CargaDashboard {
  tipo: Tipo
  # numero de poliza
  poliza: String
  # contratante
  contratante: String
  # producto: esta bloqueado 
  producto: String
  # canalDeVenta esta bloqueado
  canalDeVenta: String
  # transaccion
  transaccion: Transaccion
  # periodo de declaracion
  # periodoDeclaracion: Date
  # periodo de declaracion
  periodoDeclaracion: String
  # RUC
  ruc: String
  # codigo del usuario que hace el registro
  userCode: String
}

type ShowDashboardOutput{
  cargas:  [CargaDashboard]
  nextToken: String
}

type Mutation {
  uploadFile(input: InputCargaDashboard, filename: String): String
  firstServCarga(input: InputCargaDashboard): String
  # validations(validations: InputValidations ): String
}

type Query{
  showDashboard: ShowDashboardOutput
}

schema {
  query: Query
  mutation: Mutation
}